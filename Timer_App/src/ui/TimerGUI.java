/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import bl.DigitRow;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.time.ZoneId;
import java.util.stream.Collectors;
import javax.swing.JComboBox;
import javax.swing.JLabel;

/**
 *
 * @author martin
 */
public class TimerGUI extends javax.swing.JFrame {

	private Thread[] threads;
	private DigitRow[] rows;
	private ZoneId[] zones;

	/**
	 * Creates new form TimerGUI
	 */
	public TimerGUI() {
		this.rows = new DigitRow[3];
		this.threads = new Thread[3];
		this.zones = new ZoneId[2];
		this.zones[0] = ZoneId.of("Europe/Vienna");
		this.zones[1] = ZoneId.of("UTC");
		this.initComponents();
		this.addComponents();
		this.initializeThreads();
	}

	private void addComponents() {
		this.add(new JLabel("Ã–sterreich"));
		DigitRow firstRow = new DigitRow(ZoneId.systemDefault());
		this.rows[0] = firstRow;
		this.add(firstRow);
		for (int i = 1; i < 3; i++) {
 			String[] vals = ZoneId.getAvailableZoneIds().stream().toArray(String[]::new);
			JComboBox cbm =new JComboBox<String>(vals);
			cbm.setActionCommand(i + "");
			this.add(cbm);
			cbm.addActionListener(new ActionListener() {
				 @Override
				 public void actionPerformed(ActionEvent ae) {
					 String currZone = (String)cbm.getSelectedItem();
					 rows[Integer.parseInt(ae.getActionCommand())].setZone(ZoneId.of(currZone));
				 }
			});
			DigitRow row = new DigitRow(zones[i-1]);
			this.rows[i] = row;
			this.add(row);
		}
	}

	private void initializeThreads() {
		for (int i = 0; i < this.rows.length; i++) {
			this.threads[i] = new Thread((DigitRow) this.rows[i]);
			this.threads[i].start();
		}
	}

	/**
	 * This method is called from within the constructor to initialize the
	 * form. WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
        // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
        private void initComponents() {

                setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
                getContentPane().setLayout(new java.awt.GridLayout(3, 2));

                pack();
        }// </editor-fold>//GEN-END:initComponents

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
		/* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(TimerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(TimerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(TimerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(TimerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		//</editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new TimerGUI().setVisible(true);
			}
		});
	}

        // Variables declaration - do not modify//GEN-BEGIN:variables
        // End of variables declaration//GEN-END:variables
}
